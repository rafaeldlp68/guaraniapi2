<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.3.4</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.example</groupId>
	<artifactId>guaraniapi2</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>guaraniapi2</name>
	<description>Demo project for Spring Boot</description>
	<url/>
	<licenses>
		<license/>
	</licenses>
	<developers>
		<developer/>
	</developers>
	<scm>
		<connection/>
		<developerConnection/>
		<tag/>
		<url/>
	</scm>
	<properties>
		<java.version>17</java.version> <!-- Definição da versão do Java usada no projeto -->
	</properties>
	<dependencies>
		<!-- Spring Boot Data JPA: Permite trabalhar com persistência de dados utilizando JPA (Java Persistence API) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<!-- Spring Boot Web: Inclui o Tomcat embutido e as funcionalidades para criar APIs e aplicativos web -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- Spring Boot DevTools: Fornece ferramentas de desenvolvimento, como reinicialização automática e LiveReload -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope> <!-- Ativado apenas em tempo de execução -->
			<optional>true</optional> <!-- Dependência opcional -->
		</dependency>

		<!-- Lombok: Gera automaticamente código, como getters, setters, construtores, equals, hashCode, etc., reduzindo o boilerplate -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional> <!-- Dependência opcional -->
		</dependency>

		<!-- Spring Boot Starter Test: Inclui bibliotecas de teste para testes unitários e de integração -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope> <!-- Dependência utilizada apenas para testes -->
		</dependency>

		<!-- Jakarta Validation API: Fornece a API de validação, como @NotNull, @Pattern, etc., baseada no Jakarta EE -->
		<dependency>
    		<groupId>jakarta.validation</groupId>
    		<artifactId>jakarta.validation-api</artifactId>
    		<version>3.0.2</version> <!-- Versão da API de validação Jakarta -->
		</dependency>

		<!-- Spring Boot Validation: Adiciona suporte à validação de dados com base na API de validação Jakarta -->
		<dependency>
    		<groupId>org.springframework.boot</groupId>
    		<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<!-- MySQL Connector/J: Driver para permitir que o Spring Boot se conecte a bancos de dados MySQL -->
		<dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
            <version>9.0.0</version> <!-- Versão do driver MySQL -->
            <scope>runtime</scope> <!-- A dependência só é usada em tempo de execução -->
        </dependency>

		<!-- Hibernate Validator: Implementação de validação que suporta validações de dados com anotações, como @Email e @URL -->
		<dependency>
    		<groupId>org.hibernate.validator</groupId>
    		<artifactId>hibernate-validator</artifactId>
    		<version>8.0.0.Final</version>
		</dependency>

		<!-- Jakarta Expression Language (EL): Necessário para expressões em validações complexas, como validações customizadas com parâmetros -->
		<dependency>
    		<groupId>org.glassfish</groupId>
    		<artifactId>jakarta.el</artifactId>
    		<version>3.0.4</version>
		</dependency>
	</dependencies>
	

	<build>
		<plugins>
			<!-- Spring Boot Maven Plugin: Fornece suporte para empacotamento e execução de aplicações Spring Boot via Maven -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
